FROM node:20-alpine as base

FROM base as builder

WORKDIR /home/node/app
COPY package*.json ./

COPY . .
RUN yarn install
RUN yarn build
FROM base as runtime

ARG DATABASE_URI
ENV DATABASE_URI ${ secrets.DATABASE_URI }
ARG DOCKERHUB_TOKEN
ENV DOCKERHUB_TOKEN ${ secrets.DOCKERHUB_TOKEN }
ARG DOCKERHUB_USERNAME
ENV DOCKERHUB_USERNAME ${ secrets.DOCKERHUB_USERNAME }
ARG NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN
ENV NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN ${ secrets.NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN }
ARG PAYLOAD_SECRET
ENV PAYLOAD_SECRET ${ secrets.PAYLOAD_SECRET }
ARG NEXT_PRIVATE_DRAFT_SECRET
ENV NEXT_PRIVATE_DRAFT_SECRET ${ env.NEXT_PRIVATE_DRAFT_SECRET }
ARG NEXT_PRIVATE_REVALIDATION_KEY
ENV NEXT_PRIVATE_REVALIDATION_KEY ${ env.NEXT_PRIVATE_REVALIDATION_KEY }
ARG NEXT_PUBLIC_SERVER_URL
ENV NEXT_PUBLIC_SERVER_URL ${ env.NEXT_PUBLIC_SERVER_URL }
ARG PAYLOAD_PUBLIC_DRAFT_SECRET
ENV PAYLOAD_PUBLIC_DRAFT_SECRET ${ env.PAYLOAD_PUBLIC_DRAFT_SECRET }
ARG PAYLOAD_PUBLIC_SERVER_URL
ENV PAYLOAD_PUBLIC_SERVER_URL ${ env.PAYLOAD_PUBLIC_SERVER_URL }
ARG PORT
ENV PORT ${ env.PORT }
ARG REVALIDATION_KEY
ENV REVALIDATION_KEY ${ env.REVALIDATION_KEY }

ENV NODE_ENV=production
ENV PAYLOAD_CONFIG_PATH=dist/payload/payload.config.js

WORKDIR /home/node/app
COPY package*.json  ./
COPY yarn.lock ./

RUN yarn install --production
COPY --from=builder /home/node/app/dist ./dist
COPY --from=builder /home/node/app/build ./build
COPY --from=builder /home/node/app/.next ./.next

EXPOSE 3000

CMD ["node", "dist/server.js"]